apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    helm.sh/chart: {{ include "..chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "..name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "..name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.vault.enabled }}
      serviceAccountName: {{ .Release.Name }}-service-account
      {{- end }}
      volumes:
      {{- if .Values.vault.enabled }}
        - name: vault-token
          emptyDir:
            # Store the auth token in memory
            medium: Memory
        - name: vault-configs
          configMap:
            name: "vault-config-{{ .Release.Name }}-{{.Values.vault.role}}"
      {{- end }}
      {{- range .Values.secrets }}
        - name: {{ . }}-secret
          secret:
            secretName: {{ . }}
      {{- end }}
      {{- if .Values.vault.enabled }}
      initContainers:
        # Vault container, auth and get token
        - name: vault-agent
          image: vault:1.2.3
          env:
            - name: VAULT_ADDR
              value: {{ .Values.vault.host }} 
          args:
            - "agent"
            - "-config=/etc/vault/vault-agent-config.hcl"
            - "-log-level=debug"
          volumeMounts:
            - name: vault-configs
              mountPath: /etc/vault
            - name: vault-token
              mountPath: /home/vault
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.container.command }}
          args: {{.Values.container.command}} 
          {{- end }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.sha }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          {{- if .Values.healthEndpoint }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthEndpoint }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.healthEndpoint }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- range .Values.secrets }}
            - name: {{ . }}-secret
              mountPath: /var/run/secrets/
          {{- end }}
          {{- if .Values.vault.enabled }}
            - name: vault-token 
              mountPath: /var/run/secrets/
          {{- end }}
          env:
            {{- toYaml .Values.environment | nindent 12 }} 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
